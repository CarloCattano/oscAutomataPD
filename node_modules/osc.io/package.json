{
  "_args": [
    [
      {
        "raw": "osc.io",
        "scope": null,
        "escapedName": "osc.io",
        "name": "osc.io",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\x\\Desktop\\server\\oscAutomat"
    ]
  ],
  "_from": "osc.io@latest",
  "_id": "osc.io@0.0.3",
  "_inCache": true,
  "_location": "/osc.io",
  "_npmUser": {
    "name": "catshirt",
    "email": "caden@catshirt.net"
  },
  "_npmVersion": "1.1.63",
  "_phantomChildren": {
    "binpack": "0.1.0",
    "coffee-script": "1.3.0"
  },
  "_requested": {
    "raw": "osc.io",
    "scope": null,
    "escapedName": "osc.io",
    "name": "osc.io",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/osc.io/-/osc.io-0.0.3.tgz",
  "_shasum": "b63c462f6a6eaf518571141a1ba62847b59a8883",
  "_shrinkwrap": null,
  "_spec": "osc.io",
  "_where": "C:\\Users\\x\\Desktop\\server\\oscAutomat",
  "author": {
    "name": "catshirt",
    "email": "caden@catshirt.net"
  },
  "bugs": {
    "url": "https://github.com/catshirt/osc.io/issues"
  },
  "dependencies": {
    "node-osc": "0.1.2"
  },
  "description": "send and receive osc messages via socket.io",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b63c462f6a6eaf518571141a1ba62847b59a8883",
    "tarball": "https://registry.npmjs.org/osc.io/-/osc.io-0.0.3.tgz"
  },
  "homepage": "https://github.com/catshirt/osc.io#readme",
  "keywords": [
    "osc",
    "socket.io"
  ],
  "main": "./lib/osc.io",
  "maintainers": [
    {
      "name": "catshirt",
      "email": "caden@catshirt.net"
    }
  ],
  "name": "osc.io",
  "optionalDependencies": {},
  "readme": "# osc.io\n\nosc.io proxies osc messages from standard sockets to the browser using socket.io.\n\n## installation\n\n```\n$ npm install osc.io\n```\n\n## configuration\n\nto expose the proper endpoints from the server, you must pass your socket.io instance to osc.io.\n\n```\nvar http = require('http'),\n  socketio = require('socket.io'),\n  osc = require('osc.io'),\n  server = http.createServer(),\n  io = socketio.listen(server);\n\nosc(io);\nserver.listen(80);\n```\n\nthis will create two socket.io namespaces, `/osc/servers/:port` and `/osc/clients/:port`, to manage osc servers and osc clients respectively. possible port values are restricted to `6000` to `12000`. each namespace can listen or emit `message` events to receive and send osc messages.\n\nin the example below, we create an osc client/server in the browser and send messages from one to the other. of course, the client or server could be any osc device.\n\n```\nvar server = io.connect('http://localhost/osc/servers/8000'),\n  client = io.connect('http://localhost/osc/clients/8000');\n\nserver.on('message', function(message) {\n  console.log(message);\n});\n\nsetInterval(function() {\n  client.emit('message', ['/osc/test', 200]);\n}, 500);\n```\n\nby default, client devices broadcast to 127.0.0.1. to modify the host value of a client, your client must emit a message containing the host.\n\n```\nclient.emit('set-host', DEVICE_IP);\n```\n\n## todo\n\n- to enable multiple clients and servers, port must be passed in through the socket namespace to ensure each device has a unique client socket (socket.io creates only one socket per namespace). host cannot be passed in like port, since socket.io does not allow for variable namespace names. this makes creating a graceful connection api difficult. a proper api for managing device hosts and ports would be nice.\n\n- with socket.io lacking variable namespaces, i decided to create hannel name handlers only for ports 6000 - 12000 because i am afraid to see what happens if i create 6*x,xxx* channels. ideally, i'd like to handle truly variable port values.",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/catshirt/osc.io.git"
  },
  "version": "0.0.3"
}
